/*
 * File: app/view/CampusTalk.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ZJ02.view.CampusTalk', {
  extend: 'Ext.Container',

  requires: [
    'Ext.TitleBar',
    'Ext.Button',
    'Ext.SegmentedButton',
    'Ext.XTemplate',
    'Ext.dataview.List',
    'Ext.field.DatePicker',
    'Ext.picker.Date'
  ],

  config: {
    layout: 'fit',
    items: [
      {
        xtype: 'titlebar',
        cls: 'zjs-bg-green',
        docked: 'top',
        ui: 'zjs',
        title: '宣讲会',
        items: [
          {
            xtype: 'button',
            height: 30,
            itemId: 'mybutton23',
            ui: 'plain',
            width: 30,
            icon: '',
            iconCls: 'zjs-icon-back',
            text: 'back'
          }
        ]
      },
      {
        xtype: 'segmentedbutton',
        cls: 'zjs-filter-menu',
        docked: 'top',
        height: 40,
        itemId: 'mysegmentedbutton',
        defaults: {
          flex: 1
        },
        items: [
          {
            xtype: 'button',
            id: 'campus_btn_industry',
            itemId: 'mybutton1',
            text: '选择行业'
          },
          {
            xtype: 'button',
            id: 'campus_btn_school',
            itemId: 'mybutton2',
            text: '选择学校'
          },
          {
            xtype: 'button',
            id: 'campus_btn_time',
            itemId: 'mybutton3',
            text: '开始时间'
          }
        ]
      },
      {
        xtype: 'panel',
        hidden: false,
        layout: 'fit',
        items: [
          {
            xtype: 'container',
            cls: 'zj-list-no-data',
            hidden: true,
            itemId: 'nodata'
          },
          {
            xtype: 'dataview',
            cls: 'zjs-listview-calender',
            id: 'list_campus',
            itemId: 'mydataview4',
            minHeight: 180,
            scrollable: 'vertical',
            disableSelection: true,
            itemTpl: [
              '<div class="li">',
              '	<div class="calendar">',
              '    <div class="date">{date_month}-{date_date}</div>',
              '    <div class="time">{date_am} {date_hour}:{date_minute}</div>',
              '    <div class="day">{date_localday}</div>',
              '  </div>',
              '  <div class="c">',
              '  	<h4>{recruitmentTitle}</h4>',
              '    <p>地点：{place}</p>',
              '  </div>',
              '  <div class="i">',
              '  	<span></span>',
              '  </div>',
              '</div>'
            ]
          }
        ]
      },
      {
        xtype: 'panel',
        cls: 'zjs-dd-filter-ms',
        height: 300,
        hidden: true,
        id: 'campus_fo_industry',
        layout: 'hbox',
        items: [
          {
            xtype: 'panel',
            flex: 4,
            cls: 'col-1',
            layout: 'fit',
            scrollable: 'vertical',
            items: [
              {
                xtype: 'list',
                id: 'campustalk_filter_list_industry_lv1',
                itemId: 'campustalk_filter_list_industry_lv1',
                itemTpl: [
                  '<div>{industryName}',
                  '  <tpl if="has_child &gt; 0">',
                  '    <div class="more_arr">&gt;</div>',
                  '  </tpl>',
                  '</div>'
                ]
              }
            ]
          },
          {
            xtype: 'panel',
            flex: 6,
            cls: 'col-2',
            layout: 'fit',
            scrollable: 'vertical',
            items: [
              {
                xtype: 'list',
                id: 'campustalk_filter_list_industry_lv2',
                itemId: 'mylist',
                itemTpl: [
                  '<div>{industryName}</div>'
                ],
                itemHeight: 30
              }
            ]
          }
        ]
      },
      {
        xtype: 'panel',
        cls: 'zjs-dd-filter-ss',
        height: 300,
        hidden: true,
        id: 'campus_fo_school',
        layout: 'hbox',
        items: [
          {
            xtype: 'panel',
            flex: 1,
            cls: 'col-1',
            layout: 'fit',
            scrollable: 'vertical',
            items: [
              {
                xtype: 'list',
                id: 'campustalk_filter_list_school',
                itemId: 'mylist',
                itemTpl: [
                  '<div>{schoolName}</div>'
                ],
                itemHeight: 30
              }
            ]
          }
        ]
      },
      {
        xtype: 'container',
        centered: true,
        height: 325,
        hidden: true,
        itemId: 'dp_picker',
        style: 'background-color:#fff;',
        width: 299,
        layout: 'fit',
        modal: true,
        items: [
          {
            xtype: 'titlebar',
            docked: 'top',
            itemId: 'dp_title',
            items: [
              {
                xtype: 'button',
                itemId: 'mybutton14',
                text: '重置'
              },
              {
                xtype: 'button',
                align: 'right',
                itemId: 'mybutton15',
                text: '确定'
              }
            ]
          },
          {
            xtype: 'container',
            itemId: 'dp_wrap'
          }
        ]
      },
      {
        xtype: 'datepickerfield',
        hidden: true,
        id: 'campus_dp_time',
        itemId: 'mydatepicker',
        label: 'Field',
        placeHolder: 'mm/dd/yyyy',
        picker: {
          itemId: 'mydatepicker1',
          yearFrom: 2010,
          yearTo: 2020,
          doneButton: {
            bubbleEvents: 'tap',
            text: '确定'
          },
          cancelButton: {
            itemId: 'mybutton7',
            text: '重置'
          }
        }
      }
    ],
    listeners: [
      {
        fn: 'onMybutton23Tap3',
        event: 'tap',
        delegate: '#mybutton23'
      },
      {
        fn: 'onMybutton1Tap',
        event: 'tap',
        delegate: '#campus_btn_industry'
      },
      {
        fn: 'onMybutton2Tap',
        event: 'tap',
        delegate: '#campus_btn_school'
      },
      {
        fn: 'onMybutton3Tap',
        event: 'tap',
        delegate: '#campus_btn_time'
      },
      {
        fn: 'onMydataview2ItemTap11',
        event: 'itemtap',
        delegate: '#list_campus'
      },
      {
        fn: 'onCampustalk_filter_list_industry_lv1ItemTap',
        event: 'itemtap',
        delegate: '#campustalk_filter_list_industry_lv1'
      },
      {
        fn: 'onCampustalk_filter_list_industry_lv2ItemTap',
        event: 'itemtap',
        delegate: '#campustalk_filter_list_industry_lv2'
      },
      {
        fn: 'onCampustalk_filter_list_schoolItemTap',
        event: 'itemtap',
        delegate: '#campustalk_filter_list_school'
      },
      {
        fn: 'onDp_pickerShow',
        event: 'show',
        delegate: '#dp_picker'
      },
      {
        fn: 'onMybutton14Tap',
        event: 'tap',
        delegate: '#mybutton14'
      },
      {
        fn: 'onMybutton15Tap',
        event: 'tap',
        delegate: '#mybutton15'
      },
      {
        fn: 'onCampus_dp_timeChange',
        event: 'change',
        delegate: '#campus_dp_time'
      }
    ]
  },

  onMybutton23Tap3: function(button, e, eOpts) {
    button.up('navigationview').pop();
  },

  onMybutton1Tap: function(button, e, eOpts) {
    var x$flyout = x$('campus_fo_industry');
    var init_fo_func = this.init_fo_industry;

    if( is_active(button) ){
      this.reset_fo();
    }else{
      this.reset_fo();
      x$flyout.show();
      set_active(button);
      init_fo_func.apply(this,[]);
    }
  },

  onMybutton2Tap: function(button, e, eOpts) {
    var x$flyout = x$('campus_fo_school');
    var init_fo_func = this.init_fo_school;

    if( is_active(button) ){
      this.reset_fo();
    }else{
      this.reset_fo();
      x$flyout.show();
      set_active(button);
      init_fo_func.apply(this,[]);
    }

  },

  onMybutton3Tap: function(button, e, eOpts) {
    var _this = this;


    var x$time_fe = x$('campus_dp_time');

    var x$time = i$('dp_picker',_this);

    var init_fo_func = this.init_fo_time;

    if( is_active(button) ){
      this.reset_fo();
    }else{
      this.reset_fo();
      x$time.show();
      set_active(button);
      init_fo_func.apply(this,[]);
    }


  },

  onMydataview2ItemTap11: function(dataview, index, target, record, e, eOpts) {
    var item_data = record.data;

    var id = item_data.recruitmentId;

    change_page('CampusTalkDetail',dataview,{id:id});
  },

  onCampustalk_filter_list_industry_lv1ItemTap: function(dataview, index, target, record, e, eOpts) {
    var x$list_lv2 = x$('campustalk_filter_list_industry_lv2');

    var data = record.data;

    if(data.has_child){
      set_store_data(x$list_lv2,data.childs);
    }else{
      set_store_data(x$list_lv2,[]);
      this.set_industry(data.industryId,data.industryName);
    }

  },

  onCampustalk_filter_list_industry_lv2ItemTap: function(dataview, index, target, record, e, eOpts) {
    var data = record.data;
    this.set_industry(data.industryId,data.industryName);

  },

  onCampustalk_filter_list_schoolItemTap: function(dataview, index, target, record, e, eOpts) {
    var data = record.data;
    this.set_school(data.schoolId,data.schoolName);
  },

  onDp_pickerShow: function(component, eOpts) {

    var x$c = component;

    var x$t = x$c.down('#dp_title');

    var $t = jQuery( '#'+x$t.getId() ).find('.x-title .x-innerhtml');

    var id = x$c.getId();
    var dp_id = id+'-dp';

    var x$w = x$c.down('#dp_wrap');

    var $w = jQuery( '#'+x$w.getId() ).find('.x-inner');

    var $dp = jQuery('<div id="'+dp_id+'" class="x-jq-dp"></div>');

    $w.empty().append($dp);


    $dp.datepicker({
      'dateFormat':'yy-mm-dd',
      'onSelect':function(dateText,inst){
        $t.text(dateText);
      }
    });


    var x$field = x$('campus_dp_time');
    var default_time = get_data( x$field,'label' );
    if( default_time ){
      $dp.datepicker('setDate',default_time);
      $t.text(default_time);
    }else{
      $t.text('请选择时间');
    }
  },

  onMybutton14Tap: function(button, e, eOpts) {
    var _this = this;


    _this.reset_fo();
    _this.set_time(0,0);
  },

  onMybutton15Tap: function(button, e, eOpts) {
    var _this = this;



    var x$c = button.up('#dp_picker');

    var id = x$c.getId();
    var dp_id = id+'-dp';

    var $dp = jQuery('#'+dp_id);

    var newDate = $dp.datepicker( "getDate" );

    var x$field = x$('campus_dp_time');

    if( has_class(x$field,'fo_inited') ){
      var date_da = parse_date(newDate);
      _this.reset_fo();
      _this.set_time(date_da.fullyeardate,date_da.fullyeardate);
    }



  },

  onCampus_dp_timeChange: function(datepickerfield, newDate, oldDate, eOpts) {
    var x$field = x$('campus_dp_time');
    var _this = this;

    if( has_class(x$field,'fo_inited') ){
      var date_da = parse_date(newDate);
      _this.reset_fo();
      _this.set_time(date_da.fullyeardate,date_da.fullyeardate);
    }



  },

  initialize: function() {
    this.callParent();

    /*
    var list_industry_lv1 = Ext.getCmp('campustalk-filter-list-industry-lv1');
    var list_industry_lv2 = Ext.getCmp('campustalk-filter-list-industry-lv2');

    var opt_store = Ext.getStore('optIndustry');

    var oa = get_array_from_store(opt_store);

    var lv1_item = [];

    for( var i=0;i<oa.length;i++ ){
      var ci = oa[i];
      if(ci.parentId == 0){
        lv1_item.push(ci);
      }
    }

    list_industry_lv1.setData(lv1_item);
    list_industry_lv1.setItemTpl('{industryName}');
    list_industry_lv2.setItemTpl('{industryName}');

    list_industry_lv1.on('itemtap',function( dataview, index, target, record, e, eOpts){
      var data = record.data;
      var id = data.industryId;
      var lv2_item = [];

      for( var i=0;i<oa.length;i++ ){
        var ci = oa[i];
        if(ci.parentId == id){
          lv2_item.push(ci);
        }
      }

      list_industry_lv2.removeAll(false);
      list_industry_lv2.setData(lv2_item);
      list_industry_lv2.refresh();

    });
    */
  },

  update: function(_p) {
    var _this = this;


    var x$industry = x$('campus_fo_industry');
    var x$school = x$('campus_fo_school');
    var x$time = x$('campus_dp_time');


    var params = {
      pageSize:100,
      recruitmentType:0
    };

    var cur_industry_val = get_data( 'campus_fo_industry','value' );
    if(cur_industry_val){
      params.industryId = cur_industry_val;
    }

    var cur_school_val = get_data( 'campus_fo_school','value' );
    if(cur_school_val){
      params.schoolId = cur_school_val;
    }

    var cur_time_val = get_data( 'campus_dp_time','value' );
    if(cur_time_val){
      params.beginTime = cur_time_val;
    }

    console.log(params);

    send_request( {
      api:'recruit_list',
      method:'POST',
      params:params,
      success:function(result, request){
        if( result.success ){
          switch( result.code ){
            case '0000':
              //成功
              console.log(result);
              _this.build_list(result.data);
              break;
            case '1001':
              //失败
              break;
            default:
              toast("errCode:"+result.code);
              break;
          }
        }else{

        }
      },
      fail:function(result){
        toast("您的网络似乎有点问题，请稍候再试！");
      },
      text:'加载中',
      silent:false,
      trigger:_this,
      check_login:true
    } );



  },

  build_list: function(data) {

    var _this = this;
    var x$nodata = i$('nodata',_this);


    var x$list = x$('list_campus');





    for( var i=0;i<data.length;i++ ){
      var date_ra = parse_date(data[i].beginTime,'date_');
      jQuery.extend( data[i],date_ra );
    }


    if(data.length){

      set_store_data( x$list,data );


      x$list.show();
      x$nodata.hide();


    }else{
      set_store_data( x$list,[] );


      x$list.hide();
      x$nodata.show();

    }



    refresh_scroll(x$list);
  },

  init_fo_industry: function() {
    var _this = this;

    var x$flyout = x$('campus_fo_industry');

    var x$list_lv1 = x$('campustalk_filter_list_industry_lv1');
    var x$list_lv2 = x$('campustalk_filter_list_industry_lv2');


    var key_id = 'industryId';
    var key_parent = 'parentId';


    var init_fo = function(data){
      console.log(data);

      var da_lv1 = [
        {
          has_child:0,
          industryId:0,
          industryName:'重置',
          is_reset:true
        }
      ];
      var da_lv2 = {};

      for( var i=0;i<data.length;i++){
        var cur_o = data[i];

        if( cur_o[key_parent] === 0 ){
          da_lv1.push(cur_o);
        }else{
          if( typeof da_lv2[cur_o[key_parent]] == 'undefined' ){
            da_lv2[cur_o[key_parent]]=[];
          }
          da_lv2[cur_o[key_parent]].push(cur_o);
        }
      }

      for( var j=0;j<da_lv1.length;j++){
        if( da_lv2[da_lv1[j][key_id]] instanceof Array ){
          da_lv1[j].has_child = 1;
          da_lv1[j].childs = da_lv2[da_lv1[j][key_id]];
        }else{
          da_lv1[j].has_child = 0;
          da_lv1[j].childs = [];
        }
      }

      x$list_lv1.setData(da_lv1);

      console.log(da_lv1);

      x$flyout.addCls('fo_inited');
    };



    if( !has_class(x$flyout,'fo_inited') ){

      send_request( {
        api:'opt_industry',
        method:'POST',
        params:{
          pageSize:1000,
          recruitmentType:0
        },
        success:function(result, request){
          if( result.success ){
            switch( result.code ){
              case '0000':
                //成功
                init_fo(result.data);
                break;
              case '1001':
                //失败
                break;
              default:
                toast("errCode:"+result.code);
                break;
            }
          }else{

          }
        },
        fail:function(result){
          toast("您的网络似乎有点问题，请稍候再试！");
        },
        text:'加载中',
        silent:false,
        trigger:_this,
        check_login:false
      } );


    }








  },

  init_fo_school: function() {
    var _this = this;


    var x$flyout = x$('campus_fo_school');
    var x$list = x$('campustalk_filter_list_school');

    var init_fo = function(data){

      data.unshift({
        has_child:0,
        schoolId:0,
        schoolName:'重置',
        is_reset:true
      });


      set_store_data( x$list,data );
      x$flyout.addCls('fo_inited');
    };

    if( !has_class(x$flyout,'fo_inited') ){

      send_request( {
        api:'opt_school',
        method:'POST',
        params:{
          pageSize:1000,
          recruitmentType:0
        },
        success:function(result, request){
          if( result.success ){
            switch( result.code ){
              case '0000':
                //成功
                init_fo(result.data);
                break;
              case '1001':
                //失败
                break;
              default:
                toast("errCode:"+result.code);
                break;
            }
          }else{

          }
        },
        fail:function(result){
          toast("您的网络似乎有点问题，请稍候再试！");
        },
        text:'加载中',
        silent:false,
        trigger:_this,
        check_login:false
      } );


    }








  },

  init_fo_time: function() {
    var x$field = x$('campus_dp_time');
    var _this = this;

    var init_fo = function(data){
      x$field.setValue((new Date()));
      x$field.addCls('fo_inited');
    };

    if( !has_class(x$field,'fo_inited') ){
      init_fo();
    }
  },

  set_industry: function(value, text) {
    var fo_id = 'campus_fo_industry';
    var btn_id = 'campus_btn_industry';

    var x$fo = x$(fo_id);
    var x$btn = x$(btn_id);


    if( value === 0 ){
      set_data( x$fo,'value',null );
      set_data( x$fo,'label',null );
      x$btn.setText('选择行业');
    }else{
      set_data( x$fo,'value',value );
      set_data( x$fo,'label',text );
      x$btn.setText(text);
    }


    this.reset_fo();
    this.update();
  },

  set_school: function(value, text) {
    var fo_id = 'campus_fo_school';
    var btn_id = 'campus_btn_school';

    var x$fo = x$(fo_id);
    var x$btn = x$(btn_id);



    if( value === 0 ){
      set_data( x$fo,'value',null );
      set_data( x$fo,'label',null );
      x$btn.setText('选择学校');
    }else{
      set_data( x$fo,'value',value );
      set_data( x$fo,'label',text );
      x$btn.setText(text);
    }


    this.reset_fo();
    this.update();
  },

  set_time: function(value, text) {
    var fo_id = 'campus_dp_time';
    var btn_id = 'campus_btn_time';

    var x$fo = x$(fo_id);
    var x$btn = x$(btn_id);



    if( value === 0 ){
      set_data( x$fo,'value',null );
      set_data( x$fo,'label',null );
      x$btn.setText('开始时间');
    }else{
      set_data( x$fo,'value',value );
      set_data( x$fo,'label',text );
      x$btn.setText(text);
    }

    this.reset_fo();
    this.update();
  },

  reset_fo: function() {
    var _this = this;

    var x$industry = x$('campus_fo_industry');
    var x$school = x$('campus_fo_school');
    var x$time_fe = x$('campus_dp_time');
    var x$time = i$('dp_picker',_this);


    var x$btn_industry = x$('campus_btn_industry');
    var x$btn_school = x$('campus_btn_school');
    var x$btn_time = x$('campus_btn_time');



    x$industry.hide();
    x$school.hide();
    x$time.hide();

    clr_active(x$btn_industry);
    clr_active(x$btn_school);
    clr_active(x$btn_time);


    console.log('reset fo');
  }

});