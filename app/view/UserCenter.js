/*
 * File: app/view/UserCenter.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ZJ02.view.UserCenter', {
  extend: 'Ext.Container',
  alias: 'widget.usercenter',

  requires: [
    'Ext.TitleBar',
    'Ext.Panel',
    'Ext.Button',
    'Ext.dataview.DataView',
    'Ext.XTemplate'
  ],

  config: {
    layout: 'fit',
    items: [
      {
        xtype: 'titlebar',
        cls: 'zjs-bg-blue',
        docked: 'top',
        ui: 'zjs',
        title: '用户中心'
      },
      {
        xtype: 'panel',
        cls: 'zjs-bg-blue user-center-head',
        docked: 'top',
        height: 110,
        items: [
          {
            xtype: 'panel',
            centered: false,
            cls: 'uch-info',
            height: 55,
            margin: '',
            style: 'background-color:#fff',
            ui: 'zjs',
            width: '',
            layout: 'hbox',
            items: [
              {
                xtype: 'panel',
                flex: 1,
                cls: 'uch-left',
                height: 55,
                id: 'user_center_name'
              },
              {
                xtype: 'panel',
                flex: 1,
                cls: 'uch-right',
                height: 55,
                html: '',
                layout: 'fit',
                items: [
                  {
                    xtype: 'button',
                    cls: 'btn',
                    docked: 'right',
                    itemId: 'mybutton79',
                    width: 120,
                    iconAlign: 'right',
                    iconCls: 'zjs-icon-qrcode-g',
                    text: '简历中心'
                  }
                ]
              }
            ]
          },
          {
            xtype: 'panel',
            cls: 'uch-avatar',
            height: 100,
            html: '<div class="bg"></div> <div class="avatar"></div> <div class="avatar_mask"></div> <div class="level"></div> <div class="level_mask"></div>',
            id: 'user_center_avatar',
            margin: '0 auto',
            width: 100
          }
        ]
      },
      {
        xtype: 'panel',
        layout: 'fit',
        scrollable: 'vertical',
        items: [
          {
            xtype: 'dataview',
            cls: 'zjs-listview-1line',
            data: [
              {
                title: '申请记录',
                badge: '',
                action: 'apply_log'
              },
              {
                title: '职位收藏',
                badge: '',
                action: 'job_favourite'
              },
              {
                title: '谁看过我',
                badge: '',
                action: 'who_see_me'
              }/*, {title: '我的发布',
              badge: '20',
              action: 'my_publish'
            },
            {
              title: '文章收藏',
              badge: '20',
              action: 'article_favourite'
            }*/],
            id: 'nav_user_center',
            itemId: 'mydataview3',
            minHeight: 180,
            scrollable: 'vertical',
            disableSelection: true,
            itemTpl: [
              '<div class="li">',
              '  <div class="c">',
              '    <h4>{title}</h4>',
              '  </div>',
              '  <div class="i">',
              '    <span></span>',
              '  </div>',
              '  <tpl if="badge &gt; 0">',
              '  <div class="b">',
              '    <span>{badge}</span>',
              '  </div>',
              '  </tpl>',
              '</div>'
            ]
          }
        ]
      }
    ],
    listeners: [
      {
        fn: 'onMybutton79Tap',
        event: 'tap',
        delegate: '#mybutton79'
      },
      {
        fn: 'onMydataview3ItemTap1',
        event: 'itemtap',
        delegate: '#nav_user_center'
      }
    ]
  },

  onMybutton79Tap: function(button, e, eOpts) {

    if( !is_login() ){
      change_page('Login',button);
      return;
    }


    change_page('ResumeCenter',button);
  },

  onMydataview3ItemTap1: function(dataview, index, target, record, e, eOpts) {

    var item_data = record.data;


    if( !is_login() ){
      change_page('Login',dataview);
      return;
    }



    switch( item_data.action ){

      case 'apply_log':

        change_page('ApplyLog',dataview,{resumeId:get_s('resumeId')});

        break;
      case 'job_favourite':

        change_page('JobFavourite',dataview);

        break;
      case 'who_see_me':

        change_page('WhoSeeMe',dataview,{resumeId:get_s('resumeId')});

        break;
      case 'my_publish':

        change_page('PublishedArticle',dataview);

        break;
      case 'article_favourite':

        change_page('ArticleFavourite',dataview);

        break;

    }


    /*


    [
          {
            title: '申请记录',
            badge: '',
            action: 'apply_log'
          },
          {
            title: '职位收藏',
            badge: '5',
            action: 'job_favourite'
          },
          {
            title: '谁看过我',
            badge: '1',
            action: 'who_see_me'
          },
          {
            title: '我的发布',
            badge: '20',
            action: 'my_publish'
          },
          {
            title: '文章收藏',
            badge: '20',
            action: 'article_favourite'
          }
        ],

    */
  },

  initialize: function() {
    this.callParent();

  },

  update: function(_p) {
    var _this = this;


    //if( _p && _p.keywords ){

      send_request( {
        api:'user_center',
        method:'POST',
        params:{
          //pageSize:100,
        },
        success:function(result, request){
          if( result.success ){
            switch( result.code ){
              case '0000':
                //成功
                //console.log(result);
                _this.build_page(result.data);
                break;
              case '1001':
                //失败
                break;
              default:
                toast("errCode:"+result.code);
                break;
            }
          }else{

          }
        },
        fail:function(result){
          toast("您的网络似乎有点问题，请稍候再试！");
        },
        text:'加载中',
        silent:false,
        trigger:this,
        check_login:true
      } );

    //}

  },

  build_page: function(data) {
    var user = data.userSimpleResumePo;

    var x$avatar = x$('user_center_avatar');
    var x$name = x$('user_center_name');
    var x$nav_user_center = x$('nav_user_center');


    if( user ){
      var name_html = '<div class="name">'+user.realname+'</div><div class="nickname">'+user.nickName+'</div>';
      var avatar_html = '<div class="bg"></div>'+
          '<div class="avatar"><img src="'+user.icon+'" alt="" /></div>'+
      '<div class="avatar_mask"></div>'+
      '<div class="level"></div>'+
      '<div class="level_mask"></div>';

      x$name.setHtml(name_html);
      x$avatar.setHtml(avatar_html);

      set_s('resumeId',user.resumeId);

    }else{
      logout();
    }

    var nav_data = x$nav_user_center.getData();

    if(data){
      nav_data[0].badge = ''+data.jobApplyCount;
      nav_data[1].badge = ''+data.jobCollectCount;
      nav_data[2].badge = ''+data.jobviewCount;
    }
    //console.log(nav_data);

    x$nav_user_center.getStore().setData(nav_data);
    x$nav_user_center.refresh();

    refresh_scroll(x$nav_user_center);
  },

  show: function() {
    this.callParent();

    console.log('show data');
  }

});