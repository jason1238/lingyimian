/*
 * File: app/view/ResumePreview.js
 *
 * This file was generated by Sencha Architect version 3.0.4.
 * http://www.sencha.com/products/architect/
 *
 * This file requires use of the Sencha Touch 2.3.x library, under independent license.
 * License of Sencha Architect does not include license for Sencha Touch 2.3.x. For more
 * details see http://www.sencha.com/license or contact license@sencha.com.
 *
 * This file will be auto-generated each and everytime you save your project.
 *
 * Do NOT hand edit this file.
 */

Ext.define('ZJ02.view.ResumePreview', {
  extend: 'Ext.Container',

  requires: [
    'Ext.TitleBar',
    'Ext.Button',
    'Ext.dataview.List',
    'Ext.XTemplate'
  ],

  config: {
    cls: 'zjs',
    layout: 'card',
    items: [
      {
        xtype: 'titlebar',
        cls: 'zjs-bg-blue',
        docked: 'top',
        ui: 'zjs',
        title: '我的简历',
        items: [
          {
            xtype: 'button',
            height: 30,
            itemId: 'mybutton23',
            ui: 'plain',
            width: 30,
            icon: '',
            iconCls: 'zjs-icon-back',
            text: 'back'
          }
        ]
      },
      {
        xtype: 'list',
        cls: 'zjs-list-grouped',
        id: 'resume_view_list',
        ui: 'zjs',
        disableSelection: true,
        itemTpl: [
          '<div class="li"><div class="label">{label}</div><div class="value">{value}</div></div>'
        ],
        store: 'ResumeItem',
        grouped: true
      }
    ],
    listeners: [
      {
        fn: 'onMybutton23Tap',
        event: 'tap',
        delegate: '#mybutton23'
      }
    ]
  },

  onMybutton23Tap: function(button, e, eOpts) {
    button.up('navigationview').pop();
  },

  initialize: function() {
    this.callParent();
  },

  update: function(_p) {


    var x$list = x$('resume_view_list');
    var s$store = s$('ResumeItem');


    set_store_data(x$list,[]);

    refresh_scroll(x$list);


    var _this = this;

    if( _p && _p.resume_id ){

      send_request( {
        api:'resume_view',
        method:'POST',
        params:{
          resumeId:_p.resume_id
        },
        success:function(result, request){
          if( result.success ){

            switch( result.code ){
              case '0000':
                //成功
                //console.log(result);
                _this.build_list(result.data);
                break;
              case '1001':
                //失败
                break;
              default:
                toast("errCode:"+result.code);
                break;
            }
          }else{
            toast("接口返回失败，请稍后再试");
          }
        },
        fail:function(result){
          toast("您的网络似乎有点问题，请稍候再试！");
        },
        text:'加载中',
        silent:false,
        trigger:_this,
        check_login:true
      } );

    }

  },

  build_list: function(data) {
    var x$list = x$('resume_view_list');
    var s$store = s$('ResumeItem');


    console.log(data);

    var list_data = [];


    //个人信息
    var da = data.userBaseInfoPo;

    if( da ){

      var ra = [];
      ra.push({
        label:'姓名',
        value:da.realName  || '暂无'
      });
      ra.push({
        label:'性别',
        value:da.sexName  || '暂无'
      });
      ra.push({
        label:'出生日期',
        value:cut_time(da.birthday)  || '暂无'
      });
      ra.push({
        label:'工作经验',
        value:da.workYearName  || '暂无'
      });
      ra.push({
        label:'居住地',
        value:da.areaName  || '暂无'
      });
      ra.push({
        label:'手机',
        value:da.cellphone  || '暂无'
      });
      ra.push({
        label:'Email',
        value:da.email  || '暂无'
      });
      ra.push({
        label:'政治面貌',
        value:da.politicalLandscapeName  || '暂无'
      });
      ra.push({
        label:'求职状态',
        value:da.jobStatusName  || '暂无'
      });
      for( var i=0;i<ra.length;i++){
        ra[i].group='个人信息';
        ra[i].group_sort = 100;
        list_data.push(ra[i]);
      }

    }


    //

    //求职意向
    var da = data.jobTarget;

    if( da ){

      var ra = [];
      ra.push({
        label:'工作类型',
        value:da.targetTypeName  || '暂无'
      });
      ra.push({
        label:'期望地区',
        value:da.areaName  || '暂无'
      });
      ra.push({
        label:'到岗时间',
        value:da.entrytimeName  || '暂无'
      });
      ra.push({
        label:'期望薪水',
        value:da.sarlaryName  || '暂无'
      });
      ra.push({
        label:'行业',
        value:da.industryName  || '暂无'
      });
      ra.push({
        label:'职能',
        value:da.functionName  || '暂无'
      });
      ra.push({
        label:'自我评价',
        value:da.description  || '暂无'
      });
      for( var i=0;i<ra.length;i++){
        ra[i].group='求职意向';
        ra[i].group_sort = 200;
        list_data.push(ra[i]);
      }

    }

    //教育信息
    var da = data.jobResumeEducationList;

    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '时间：'+(cut_time(da[i].educationBeginTime) || '暂无' )+' 至 '+(cut_time(da[i].edudentEndTime) || '暂无' )+'<br>'+
            '专业：'+(da[i].majorName || '暂无' )+'<br>'+
            '学历：'+(da[i].educationName || '暂无' )+'<br>'+
            '专业描述：'+(da[i].description || '暂无' )+'<br>';
        ra.push({
          label:da[i].schoolName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='教育信息';
        ra[i].group_sort = 300;
        list_data.push(ra[i]);
      }

    }

    //学生情况
    var da = data.jobResumeStudentList;

    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '任职时间：'+(cut_time(da[i].officeBeginTime) || '暂无' )+' 至 '+(cut_time(da[i].officeEndTime) || '暂无' )+'<br>'+
            '职务描述：'+(da[i].officeDescription || '暂无' )+'<br>'+
            '获奖时间：'+(cut_time(da[i].rewardTime) || '暂无' )+'<br>'+
            '奖项名称：'+(da[i].rewardName || '暂无' )+'<br>'+
            '奖项级别：'+(da[i].rewardLevel || '暂无' )+'<br>';
        ra.push({
          label:da[i].officeName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='学生情况';
        ra[i].group_sort = 400;
        list_data.push(ra[i]);
      }

    }


    //工作经验
    var da = data.jobResumeWorkExperienceList;


    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '时间：'+cut_time(da[i].beginTime)+' 至 '+cut_time(da[i].endTime)+'<br>'+
            '行业：'+da[i].industryName+'<br>'+
            '公司性质：'+da[i].enterpriseTypeName+'<br>'+
            '规模：'+da[i].scaleName+'<br>'+
            '职位：'+da[i].functionName+'<br>'+
            '部门：'+da[i].department+'<br>'+
            '工作描述：'+da[i].experienceDescription+'<br>';
        ra.push({
          label:da[i].enterpriseName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='工作经验';
        ra[i].group_sort = 500;
        list_data.push(ra[i]);
      }

    }


    //培训经历
    var da = data.jobTrainList;


    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '时间：'+cut_time(da[i].beginTime)+' 至 '+cut_time(da[i].endTime)+'<br>'+
            '培训地点：'+da[i].trainAddress+'<br>'+
            '培训课程：'+da[i].trainCourse+'<br>'+
            '所获证书：'+da[i].trainCertificate+'<br>'+
            '详细描述：'+da[i].trainDescription+'<br>';
        ra.push({
          label:da[i].trainAgency,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='培训经历';
        ra[i].group_sort = 600;
        list_data.push(ra[i]);
      }

    }


    //语言能力
    var da = data.jobLanguageList;


    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '级别：'+ ( da[i].lanLevelName || '暂无' ) +'<br>'+
            '分数：'+ ( da[i].score || '暂无' ) +'<br>'+
            '掌握程度：'+ ( da[i].lanMasterName || '暂无' ) +'<br>';
        ra.push({
          label:da[i].lanName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='语言能力';
        ra[i].group_sort = 700;
        list_data.push(ra[i]);
      }

    }


    //职业技能
    var da = data.jobVocationalSkillsList;


    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '掌握程度：'+( da[i].positionMasterName || '暂无' )+'<br>';
        ra.push({
          label:da[i].positionName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='职业技能';
        ra[i].group_sort = 800;
        list_data.push(ra[i]);
      }

    }

    //证书
    var da = data.jobCertificateList;


    if( da ){

      var ra = [];
      for( var i=0;i<da.length;i++){
        var html = '<p>'+
            '获得时间：'+(cut_time(da[i].gainTime) || '暂无' )+'<br>'+
            '成绩：'+(da[i].score || '暂无' )+'<br>';
        ra.push({
          label:da[i].certificateName,
          value:html
        });
      }
      for( var i=0;i<ra.length;i++){
        ra[i].group='证书';
        ra[i].group_sort = 900;
        list_data.push(ra[i]);
      }

    }





    if(list_data.length){
      x$list.removeCls('zj-list-no-data');
      s$store.setData(list_data);
    }else{
      x$list.addCls('zj-list-no-data');
      x$list.removeAll();
    }


    refresh_scroll(x$list);
  }

});